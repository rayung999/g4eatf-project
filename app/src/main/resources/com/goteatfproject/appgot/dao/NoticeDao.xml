<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.goteatfproject.appgot.dao.NoticeDao">

  <!-- 자바 객체의 프로퍼티와 컬럼 이름을 연결한다. -->
  <resultMap type="notice" id="noticeMap">
    <id column="csno" property="no"/>
    <result column="title" property="title"/>
    <result column="cont" property="content"/>
    <result column="createdate" property="createDate"/>

    <association property="writer" javaType="member">
      <id column="mno" property="no"/>
      <result column="name" property="nick"/>
    </association>

  </resultMap>

  <select id="findAll" resultMap="noticeMap">
    select
    cs.csno,
    cs.title,
    cs.cont,
    cs.createdate,
    m.mno,
    m.nick
    from
    cs_notice cs

    join member m on cs.mno = m.mno
    <if test="keyword != null">
      where
      cs.title like concat("%", #{keyword}, "%")
      or cs.cont like concat("%", #{keyword}, "%")
      or m.nick like concat("%", #{keyword}, "%")
    </if>
    order by
    <if test="titleSort != null">
      title ${titleSort}
    </if>
    <if test="titleSort == null">
      cs.csno desc
    </if>
        limit #{startIndex}, #{size}
  </select>

  <select id="count" resultType="int">
    select
    count(*)
    from
    cs_notice cs
    join member m on cs.mno = m.mno
    <if test="keyword != null">
      where
      cs.title like concat("%", #{keyword}, "%")
      or cs.cont like concat("%", #{keyword}, "%")
      or m.nick like concat("%", #{keyword}, "%")
    </if>
    order by
    <if test="titleSort != null">
      title ${titleSort}
    </if>
    <if test="titleSort == null">
      cs.csno desc
    </if>
  </select>

  <insert id="insert" parameterType="notice"
      useGeneratedKeys="true" keyColumn="csno" keyProperty="no">
    insert into cs_notice(title,cont,mno,createdate)
    values(#{title},#{content},#{writer.no},now())
  </insert>

  <update id="update" parameterType="notice">
    update cs_notice set
    title=#{title},
    cont=#{content}
    where csno=#{no}
  </update>

  <delete id="delete">
    delete from cs_notice
    where csno=#{value}
  </delete>

  <delete id="deleteByMember">
    delete from cs_notice
    where mno=#{value}
  </delete>

  <select id="findByNo" resultMap="noticeMap">
    select
    m.mno,
    m.nick,
    cs.title,
    cs.cont,
    cs.createdate
    from
    cs_notice cs
    join member m on m.mno = cs.mno
    where
    cs.csno=#{value}
  </select>

</mapper>